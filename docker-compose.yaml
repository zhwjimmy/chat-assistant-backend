version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chat-assistant-postgres
    environment:
      POSTGRES_DB: chat_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Chat Assistant Backend
  chat-assistant-backend:
    build: .
    container_name: chat-assistant-backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=chat_assistant
      - DB_SSLMODE=disable
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./config:/root/config:ro
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Migration (optional - run once)
  migrate:
    image: migrate/migrate
    container_name: chat-assistant-migrate
    command: [ "-path", "/migrations", "-database", "postgres://postgres:postgres@postgres:5432/chat_assistant?sslmode=disable", "up" ]
    volumes:
      - ./internal/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - migrate

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: chat-assistant-network
