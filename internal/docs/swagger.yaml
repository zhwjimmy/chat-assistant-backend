basePath: /
definitions:
  response.ConversationListResponse:
    properties:
      conversations:
        items:
          $ref: '#/definitions/response.ConversationResponse'
        type: array
    type: object
  response.ConversationResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      model:
        type: string
      provider:
        type: string
      source_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  response.ErrorInfo:
    properties:
      code:
        type: string
      details:
        type: string
      message:
        type: string
    type: object
  response.MessageListResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/response.MessageResponse'
        type: array
    type: object
  response.MessageResponse:
    properties:
      content:
        type: string
      conversation_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  response.PaginatedResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.ErrorInfo'
      pagination:
        $ref: '#/definitions/response.PaginationInfo'
      success:
        type: boolean
    type: object
  response.PaginationInfo:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  response.Response:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.ErrorInfo'
      success:
        type: boolean
    type: object
  response.SearchConversationResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      matched_fields:
        description: 匹配信息，用于前端高亮
        items:
          type: string
        type: array
      messages:
        description: 匹配的消息列表（如果 conversation 匹配但消息不匹配，则为空；最多返回3条消息）
        items:
          $ref: '#/definitions/response.SearchMessageResponse'
        type: array
      model:
        type: string
      provider:
        type: string
      source_id:
        type: string
      source_title:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  response.SearchMessageResponse:
    properties:
      content:
        type: string
      conversation_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      matched_fields:
        description: 匹配信息，用于前端高亮
        items:
          type: string
        type: array
      role:
        type: string
      source_content:
        type: string
      source_id:
        type: string
      updated_at:
        type: string
    type: object
  response.SearchResponse:
    properties:
      conversations:
        items:
          $ref: '#/definitions/response.SearchConversationResponse'
        type: array
      query:
        description: 搜索关键词，用于前端高亮
        type: string
    type: object
  response.UserResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@chatassistant.com
    name: Chat Assistant Team
  description: A RESTful API for the Chat Assistant Backend service. This API provides
    endpoints for managing users, conversations, and messages.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Chat Assistant Backend API
  version: 1.0.0
paths:
  /api/v1/conversations:
    get:
      consumes:
      - application/json
      description: Retrieve conversations list with pagination
      parameters:
      - description: User ID
        format: uuid
        in: query
        name: user_id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Conversations list
          schema:
            allOf:
            - $ref: '#/definitions/response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.ConversationListResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Conversations
      tags:
      - Conversations
  /api/v1/conversations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific conversation by ID
      parameters:
      - description: Conversation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Conversation deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Conversation not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete Conversation
      tags:
      - Conversations
    get:
      consumes:
      - application/json
      description: Retrieve a specific conversation by ID
      parameters:
      - description: Conversation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Conversation details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ConversationResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Conversation not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Conversation
      tags:
      - Conversations
  /api/v1/conversations/{id}/messages:
    get:
      consumes:
      - application/json
      description: Retrieve all messages in a specific conversation with pagination
      parameters:
      - description: Conversation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Messages list
          schema:
            allOf:
            - $ref: '#/definitions/response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.MessageListResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Conversation Messages
      tags:
      - Conversations
  /api/v1/messages:
    get:
      consumes:
      - application/json
      description: Retrieve messages list with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Messages list
          schema:
            allOf:
            - $ref: '#/definitions/response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.MessageListResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Messages
      tags:
      - Messages
  /api/v1/messages/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific message by ID
      parameters:
      - description: Message ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete Message
      tags:
      - Messages
    get:
      consumes:
      - application/json
      description: Retrieve a specific message by ID
      parameters:
      - description: Message ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.MessageResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Message
      tags:
      - Messages
  /api/v1/search:
    get:
      consumes:
      - application/json
      description: Search conversations by title or message content, returns conversation
        list with matched messages
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - description: User ID
        format: uuid
        in: query
        name: user_id
        type: string
      - description: Provider ID (e.g., openai, gemini, claude)
        in: query
        name: provider_id
        type: string
      - description: Start date for filtering conversations
        format: date
        in: query
        name: start_date
        type: string
      - description: End date for filtering conversations
        format: date
        in: query
        name: end_date
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Search results
          schema:
            allOf:
            - $ref: '#/definitions/response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.SearchResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search Conversations
      tags:
      - Search
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific user by ID
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get User
      tags:
      - Users
swagger: "2.0"
